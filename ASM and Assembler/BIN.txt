tmp(0) := x"90E";	-- JSR @14		#Deve desviar para a posição 14
tmp(1) := x"605";	-- JMP @5		#Deve desviar para a posição 5
tmp(2) := x"709";	-- JEQ @9		#Deve desviar para a posição 9
tmp(3) := x"000";	-- NOP
tmp(4) := x"000";	-- NOP
tmp(5) := x"405";	-- LDI $5		#Carrega acumulador com valor 5
tmp(6) := x"500";	-- STA $0		#Armazena 5 na posição 0 da memória
tmp(7) := x"800";	-- CEQ @0		#A Comparação deve fazer o flagIgual ser 1
tmp(8) := x"602";	-- JMP @2		#Vai testar o flagIgual depois do jump
tmp(9) := x"000";	-- NOP
tmp(10) := x"404";	-- LDI $4		#Carrega acumulador com valor 4
tmp(11) := x"800";	-- CEQ @0		#Compara com valor 5, deve fazer o flagIgual ser 0
tmp(12) := x"703";	-- JEQ @3		#Não deve ocorrer o desvio
tmp(13) := x"60D";	-- JMP @13		#Fim. Deve ficar neste laço
tmp(14) := x"B14";	-- OP_AND @20
tmp(15) := x"000";	-- NOP
tmp(16) := x"A00";	-- RET			#Retorna para a posição 1
